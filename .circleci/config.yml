# JavaScript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
aliases:
  - &dev-filter
      branches:
        only: /.*/
      tags:
        ignore: /.*/
  - &prod-filter
      branches:
        ignore: /.*/
      tags:
        only: /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/

version: 2.1
executors:
  docker-runner:
    environment:
      PROJECT_NAME: Projet1-Team-1
    docker:
      - image: circleci/node:12.13.0
      - image: postgres
      - image: redis
  docker-publisher:
    environment:
      PROJECT_NAME: projet1-team-1
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  install:
    executor: docker-runner
    steps:
      - checkout
      - run:
          name: install package
          command: npm ci
  test :
    executor: docker-runner
    steps:
      - run: echo "A Test"
  
  publish-image-dev :
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Build Docker Image
          command: docker build -t api .
      - run:
          name: Tag Image
          command: docker tag api ${DH_USERNAME}/${PROJECT_NAME}:${CIRCLE_BUILD_NUM}
      - run:
          name: Connect to dockerhub
          command: docker login --username=${DH_USERNAME} --password=${DH_PASSWORD}
      - run:
          name: Push on dockerhub
          command: docker push ${DH_USERNAME}/${PROJECT_NAME}:${CIRCLE_BUILD_NUM}
  publish-image-prod :
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Build Docker Image
          command: docker build -t api .
      - run:
          name: Tag Image
          command: docker tag api ${DH_USERNAME}/${PROJECT_NAME}:${CIRCLE_TAG}
      - run:
          name: Connect to dockerhub
          command: docker login --username=${DH_USERNAME} --password=${DH_PASSWORD}
      - run:
          name: Push on dockerhub
          command: docker push ${DH_USERNAME}/${PROJECT_NAME}:${CIRCLE_TAG}

workflows:
  version: 2
  build-infra-dev:
    jobs:
      - install:
          filters: *dev-filter
      - test:
          filters: *dev-filter  
          requires:
            - install
      - publish-image-dev:
          filters: *dev-filter
          requires:
            - test

  build-infra-prod:
    jobs:
      - install:
          filters: *prod-filter
      - test:
          filters: *prod-filter
          requires:
            - install
      - publish-image-prod:
          filters: *prod-filter
          requires:
            - test
